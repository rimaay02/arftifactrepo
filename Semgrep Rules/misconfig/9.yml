rules:
  - id: express-cookie-session-no-secure
    message: "Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS."
    severity: WARNING
    languages:
      - javascript
      - typescript
    metadata:
      cwe:
        - "CWE-522: Insufficiently Protected Credentials"
      owasp:
        - A02:2017 - Broken Authentication
        - A04:2021 - Insecure Design
      category: security
      technology:
        - express
      subcategory:
        - vuln
      likelihood: HIGH
      impact: LOW
      confidence: MEDIUM
    patterns:
      - pattern-either:
          - pattern-inside: require('cookie-session')
          - pattern-inside: require('express-session')
      - pattern: $SESSION(...)
      - pattern-not-inside: $SESSION(<... {cookie:{secure:true}} ...>,...)
      - pattern-not-inside: $OPTS = <... {cookie:{secure:true}} ...>; ... $SESSION($OPTS,...)

  - id: express-cookie-session-no-expires
    message: "Default session middleware settings: `expires` not set. Use it to set expiration date for persistent cookies."
    severity: WARNING
    languages:
      - javascript
      - typescript
    metadata:
      cwe:
        - "CWE-522: Insufficiently Protected Credentials"
      owasp:
        - A02:2017 - Broken Authentication
        - A04:2021 - Insecure Design
      category: security
      technology:
        - express
      subcategory:
        - vuln
      likelihood: HIGH
      impact: LOW
      confidence: MEDIUM
    patterns:
      - pattern-either:
          - pattern-inside: require('cookie-session')
          - pattern-inside: require('express-session')
      - pattern: $SESSION(...)
      - pattern-not-inside: $SESSION(<... {cookie:{expires:...}} ...>,...)
      - pattern-not-inside: $OPTS = <... {cookie:{expires:...}} ...>; ... $SESSION($OPTS,...)

  - id: express-cookie-session-no-domain
    message: "Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested."
    severity: WARNING
    languages:
      - javascript
      - typescript
    metadata:
      cwe:
        - "CWE-522: Insufficiently Protected Credentials"
      owasp:
        - A02:2017 - Broken Authentication
        - A04:2021 - Insecure Design
      category: security
      technology:
        - express
      subcategory:
        - vuln
      likelihood: HIGH
      impact: LOW
      confidence: MEDIUM
    patterns:
      - pattern-either:
          - pattern-inside: require('cookie-session')
          - pattern-inside: require('express-session')
      - pattern: $SESSION(...)
      - pattern-not-inside: $SESSION(<... {cookie:{domain:...}} ...>,...)
      - pattern-not-inside: $OPTS = <... {cookie:{domain:...}} ...>; ... $SESSION($OPTS,...)

  - id: express-cookie-session-no-path
    message: "Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path."
    severity: WARNING
    languages:
      - javascript
      - typescript
    metadata:
      cwe:
        - "CWE-522: Insufficiently Protected Credentials"
      owasp:
        - A02:2017 - Broken Authentication
        - A04:2021 - Insecure Design
      category: security
      technology:
        - express
      subcategory:
        - vuln
      likelihood: HIGH
      impact: LOW
      confidence: MEDIUM
    patterns:
      - pattern-either:
          - pattern-inside: require('cookie-session')
          - pattern-inside: require('express-session')
      - pattern: $SESSION(...)
      - pattern-not-inside: $SESSION(<... {cookie:{path:...}} ...>,...)
      - pattern-not-inside: $OPTS = <... {cookie:{path:...}} ...>; ... $SESSION($OPTS,...)
